<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                  http://www.springframework.org/schema/context
                  http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:component-scan
		base-package="org.springframework.samples.petclinic.web" />

	<!-- ※ 『dispatcher-servlet.xml』의 기본 샘플 코드 -->
	<!-- 이 코드는 기본 설정 내용을 복사하기 위해서 스프링 doc를 참고하여 작성한다 -->
	<!-- → 『C:\spring-framework-3.0.2.RELEASE\docs\spring-framework-reference\pdf』 
		경로로 이동 -->
	<!-- → 『spring-framework-reference.pdf』 파일 열기(실행) -->
	<!-- → 문서 본문 내용의 425 페이지(직접이동 450 / 805) 로 이동 -->
	<!-- → 페이지 하단의 XML 파일 샘플코드 복사 & 붙여넣기 -->

	<!-- 『BeanNameUrlHandlerMapping』 -->
	<bean id="beanNameUrlMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
		<property name="alwaysUseFullPath" value="true"></property>
		<property name="order" value="1"></property>
	</bean>
	
	<!-- 『InternalResourceViewResolver』 -->
	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- /WEB-INF/views/    Test       .jsp -->
		<property name="prefix" value="/WEB-INF/views/"></property>
		<property name="suffix" value=".jsp"></property>
	</bean>

	<!-- DataSource 등록 → SimpleDriverDataSource -->
	<bean id="localDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@localhost:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>

	<bean id="remoteDataSource"
		class="org.springframework.jdbc.datasource.SimpleDriverDataSource">
		<property name="driverClass"
			value="oracle.jdbc.driver.OracleDriver"></property>
		<property name="url"
			value="jdbc:oracle:thin:@211.238.142.170:1521:xe"></property>
		<property name="username" value="scott"></property>
		<property name="password" value="tiger"></property>
	</bean>

	<!-- DAO 등록 -->
	<bean id="employeeDAO" class="com.test.mvc.EmployeeDAO">
		<property name="dataSource" ref="remoteDataSource"></property>
	</bean>

	<bean id="regionDAO" class="com.test.mvc.RegionDAO">
		<property name="dataSource" ref="remoteDataSource"></property>
	</bean>

	<bean id="departmentDAO" class="com.test.mvc.DepartmentDAO">
		<property name="dataSource" ref="remoteDataSource"></property>
	</bean>

	<bean id="positionDAO" class="com.test.mvc.PositionDAO">
		<property name="dataSource" ref="remoteDataSource"></property>
	</bean>

	<!-- AJAX 관련 Controller 등록 -->
	<bean name="/ajax.action" class="com.test.mvc.AjaxController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>
	
	<!-- 직원 리스트 controller 등록 -->
	<bean name="/employeelist.action"
		class="com.test.mvc.EmployeeListController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>

	<!-- 직원 데이터 입력폼 Controller 등록 -->
	<bean name="/employeeinsertform.action" class="com.test.mvc.EmployeeInsertFormController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>


	<!-- 직원 데이터 입력 액션 Controller 등록 -->
	<bean name="/employeeinsert.action" class="com.test.mvc.EmployeeInsertController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>
	
	<!-- check~!!! -->
	<!-- 기존 직원 데이터 입력폼 Controller 등록 내용과 비교~!!! -->
	<!-- 직원 데이터 수정폼 Controller 등록 -->
	<bean name="/employeeupdateform.action" class="com.test.mvc.EmployeeUpdateFormController">
		<property name="employeeDAO" ref="employeeDAO"></property>
		<property name="regionDAO" ref="regionDAO"></property>
		<property name="departmentDAO" ref="departmentDAO"></property>
		<property name="positionDAO" ref="positionDAO"></property>
	</bean>
	
	<!-- 직원 데이터 수정 액션 Controller 등록 -->
	<bean name="/employeeupdate.action" class="com.test.mvc.EmployeeUpdateController">
      	<property name="dao" ref="employeeDAO"></property>
   	</bean>
	
	
	<!-- 직원 데이터 삭제 액션 Controller 등록 -->
	<bean name="/employeedelete.action" class="com.test.mvc.EmployeeDeleteController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>
	
	<!-- Login 폼페이지 요청 Controller 등록 -->
	<bean name="/loginform.action" class="com.test.mvc.LoginFormController"></bean>

	<!-- Login 액션 Controller 등록 -->
	<bean name="/login.action" class="com.test.mvc.LoginController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>
	
	<!-- Logout 액션 Controller 등록 -->
	<bean name="/logout.action" class="com.test.mvc.LogoutController"></bean>
	
	<!-- 직원 리스트 Controller 등록(일반 직원) -->
	<bean name="/emplist.action" class="com.test.mvc.EmpListController">
		<property name="dao" ref="employeeDAO"></property>
	</bean>

	<!-- 지역 리스트 Controller 등록 -->
	<bean name="/regionlist.action" class="com.test.mvc.RegionListController">
		<property name="dao" ref="regionDAO"></property>
	</bean>
	
	<!-- 지역 데이터 입력 Controller 등록 -->
	<bean name="/regioninsertform.action" class="com.test.mvc.RegionInsertFormController"></bean>

	<!-- regionAJAX 관련 Controller 등록 -->
	<bean name="/regionajax.action" class="com.test.mvc.RegionAjaxController">
		<property name="dao" ref="regionDAO"></property>
	</bean>
</beans>








